{"content":"<div id=\"rules\">\n<h1 id=\"regras-do-plinko\">Regras do Plinko</h1>\n\n<h2 id=\"apresentao\">Apresentação</h2>\n\n<p>Plinko é um jogo de apostas muito peculiar onde uma bolinha cai por um tabuleiro vertical, quicando e rebatendo entre pinos. Foi um jogo muito popular em programas de TV durante o século XX.  A BGaming representa esse tabuleiro na forma de uma pirâmide. O jogo em si é extremamente simples: o jogador escolhe de 8 a 16 fileiras, torcendo para que a bolinha caia no espaço com o melhor pagamento dentre os espaços selecionados. Depois disso é só assistir a bolinha passando pelos pinos à medida em que cai do topo da pirâmide até a base do tabuleiro. O prêmio é definido quando a bolinha termina de cair, passando pelo pino mais baixo. Então seja bem-vindo ao sistema super complexo de Plinko! Acredite na sua sorte e deixe a bolinha cair!</p>\n\n<h2 id=\"regras\">Regras</h2>\n\n<p>O objetivo é ganhar dinheiro ao soltar a bolinha de Plinko e esperar até que ela caia no espaço de maior prêmio na base do tabuleiro.</p>\n\n<h2 id=\"apostas\">Apostas</h2>\n\n<p>Escolha o valor da aposta. Para tal, use os botões <strong>“-”</strong>, <strong>“+”</strong>, <strong>“Mín”</strong> e <strong>“Máx”</strong>. Quando a aposta estiver no máximo, os botões <strong>“+”</strong> e <strong>“Máx”</strong> ficam desativados. Quando a aposta estiver no mínimo, os botões <strong>“-”</strong> e <strong>“Mín”</strong> ficam desativados. Escolha o Nível de Risco: Baixo, Normal ou Alto. Escolha o número de linhas do jogo: de 8 a 16. Escolha o Modo de Aposta: Manual ou Automático.</p>\n\n<p>Para começar a rodada, aperte o botão <strong>Jogar</strong>. Durante a rodada, todos os botões de aposta ficam desativados, exceto <strong>Modo de Aposta</strong>. Também durante a rodada, você pode iniciar outra rodada com as mesmas configurações se apertar o botão <strong>Jogar</strong>. No fim de cada rodada, a bola para em um dos espaços. Os números exibidos em cada espaço representa valores multiplicadores. O multiplicador presente no espaço em que a bola caiu será aplicado à aposta do jogador. O prêmio final é calculado com a multiplicação da aposta do jogador por todos os valores multiplicadores aplicáveis.</p>\n\n<p>No <strong>Modo Automático</strong>, o jogo exibe um campo que indica o número de apostas automáticas. Escolha o <strong>número de apostas</strong>. Aperte o botão <strong>Jogar</strong>. O botão <strong>Jogar</strong> muda para <strong>Parar</strong> e indica o número de apostas que ainda faltam. Uma série de rodadas termina quando o número de rodadas definido for alcançado, se o jogador apertar o botão <strong>Parar</strong>, ou se não houver saldo suficiente.</p>\n\n<p><span class=\"min_max_bet\">O valor mínimo da aposta é {min_bet}. O valor máximo da aposta é {max_bet}</span></p>\n\n<h2 id=\"resultados\">Resultados</h2>\n\n<p>Os prêmios são calculados de acordo com a tabela de pagamentos. O resultado é adicionado ao campo do saldo. O valor dos pagamentos varia de baixo a alto.</p>\n\n<div class=\"license-block-casual casual_custom_license\">\n\n  <h2 id=\"requisitos-de-licena\">Requisitos de licença</h2>\n\n  <p><span class=\"__OPTIONS__-license_rules-license netherlands\">\nO Modo Automático pode ficar indisponível no jogo por causa dos requisitos da licença que regula o trabalho da operadora.\n</span></p>\n\n  <p><span class=\"__OPTIONS__-license_rules-license netherlands\">\nOs giros rápidos podem ficar indisponíveis no jogo por causa dos requisitos da licença que regula o trabalho da operadora.\n</span></p>\n\n  <p><span class=\"casual_custom_license\">A habilidade de iniciar outra rodada com as mesmas configurações usando o botão ‘Jogar’ durante a rodada atual pode não estar disponível no jogo devido à licença que regula o trabalho da operadora. Neste caso, o botão ‘Jogar’ permanecerá inativo até que a rodada atual se encerre e os resultados sejam exibidos. Apenas uma rodada por vez pode ser jogada.</span></p>\n\n</div>\n\n<h2 id=\"retorno-para-o-jogador\">Retorno para o jogador</h2>\n\n<p>O retorno teórico geral ao jogador (RTP) varia de {RTP.min_rtp}% a {RTP.max_rtp}% conforme a estratégia escolhida pelo jogador.</p>\n\n<p>A ocorrência de algum erro anula qualquer jogada e pagamento! Todas as rodadas não concluídas serão encerradas a cada 24 horas. Se o jogo exigir uma ação de “Coleta”, a “Coleta” será realizada e os rendimentos da rodada serão somados ao saldo do jogador. Se o jogo exigir alguma escolha por parte do jogador, o resultado irá considerar que o jogador tenha feito a escolha sem nenhum risco e sem aumentar a aposta inicial.</p>\n\n<p><span class=\"game_version\">Versão do jogo {game_version}.</span></p>\n\n<p>As Regras do Jogo, conforme publicadas neste site, estão em inglês. As traduções para outros idiomas são fornecidas como um serviço de boa-fé. Em caso de ambiguidade entre uma versão em inglês e uma tradução, a versão em inglês sempre será prioritária.</p>\n</div>\n","contentUpdateScript":"const casinoOptions = window.__OPTIONS__;\nlet customRulesStyle = '';\n\nif (casinoOptions?.math?.gamble_limit) {\n    content = content.replaceAll('{GAMBLE_LIMIT}', casinoOptions.math.gamble_limit);\n}\n\n//INFO: temporary solution for BGG-7896 & BGG-11170, but we need more flexible solution\nconst licenseDisabled = [\"empty\", \"switzerland\"];\nconst rulesLicense = casinoOptions?.license_rules?.license ?? \"empty\";\nif (licenseDisabled.includes(rulesLicense)) {\n    customRulesStyle += ` .license-block { display: none } `;\n}\n\nif (rulesLicense === \"empty\") {\n\tcustomRulesStyle += ` .license-block-casual { display: none } `;\n}\n\n// BGG-11165: Allow custom rules for any license\ncustomRulesStyle += ` .__OPTIONS__-license_rules-license { display: none } `;\ncustomRulesStyle += ` .__OPTIONS__-license_rules-license.${rulesLicense} { display: unset } `;\n\nif (casinoOptions?.ui?.show_rtp_in_rules === false) {\n    const rtpRegExp = /<h\\d[^>]*>[^>]*<\\/h\\d>[^<]*<p>[^<]*(\\{RTP.+\\}|\\d[^<]*%)[^<]*<\\/p>[^<]*/;\n\n    content = content.replace(rtpRegExp, '');\n}\n\nif (casinoOptions?.math?.rtp) {\n    if (!isNaN(casinoOptions.math.rtp)) {\n        casinoOptions.math.rtp = { main: casinoOptions.math.rtp };\n    }\n\n    content = content.replaceAll(`{RTP_VALUE}`, `{RTP.main}`);\n    Object.keys(casinoOptions.math.rtp).forEach((key) => {\n        content = content.replaceAll(`{RTP.${key}}`, casinoOptions.math.rtp[key]);\n    });\n}\n\nif (casinoOptions?.custom?.paytableFormatted) {\n    Object.keys(casinoOptions.custom.paytableFormatted).forEach((key) => {\n        content = content.replaceAll(`{PAYTABLE.${key}}`, casinoOptions.custom.paytableFormatted[key]);\n    });\n}\n\nif (casinoOptions?.custom?.wintableFormatted) {\n\tObject.keys(casinoOptions.custom.wintableFormatted).forEach((key) => {\n\t\tcontent = content.replaceAll(`{WIN.${key}}`, casinoOptions.custom.wintableFormatted[key]);\n\t});\n}\n\nif (casinoOptions?.custom?.maxWinsFormatted) {\n    casinoOptions.custom.maxWinsFormatted.forEach((winFormatted, index) => {\n        content = content.replaceAll(`{MAX_WIN.${index}}`, winFormatted);\n    });\n}\n\nif (casinoOptions?.custom?.betFormatted) {\n    content = content.replaceAll(`{BET_FORMATTED}`, casinoOptions.custom.betFormatted);\n}\n\nif (customRulesStyle !== '') {\n    content = '<style>' + customRulesStyle + '</style>' + content;\n}\n\nreturn content;\n\n","domScripts":["(()=>{\nconst casinoOptions = window.__OPTIONS__;\n\nfunction formatBet(bet, subunits, exponent = 0) {\n    const betValue = bet / subunits;\n    let ret;\n\n    if (exponent > 0) {\n        let str = betValue.toFixed(exponent).split('.');\n        if (str[0].length > 3) {\n            str[0] = str[0].replace(/(.)(?=(.{3})+$)/g, '$1 ');\n        }\n        ret = str.join('.');\n    } else {\n        ret = betValue.toFixed(0).replace(/(.)(?=(.{3})+$)/g, '$1 ');\n    }\n    return ret;\n}\n\nfunction setMinMaxBets(options) {\n    const { rules, license_rules } = options;\n    const { min_bet, max_bet, currency } = rules || {};\n    const { symbol, exponent, subunits } = currency || {};\n\n    const isNeedToRemoveMinMaxBetBlock =\n        license_rules?.license !== 'switzerland' && license_rules?.license !== 'danish' && license_rules?.license !== 'swedish';\n    document.querySelectorAll('.min_max_bet').forEach((fragment) => {\n        if (isNeedToRemoveMinMaxBetBlock || (!min_bet && !max_bet)) {\n            fragment.remove();\n        } else {\n            const currencySymbol = symbol || '';\n            const minBet = formatBet(min_bet, subunits, exponent);\n            const maxBet = formatBet(max_bet, subunits, exponent);\n            fragment.textContent = fragment.textContent.replace('{min_bet}', `${minBet} ${currencySymbol}`);\n            fragment.textContent = fragment.textContent.replace('{max_bet}', `${maxBet} ${currencySymbol}`);\n        }\n    });\n}\n\nsetMinMaxBets(casinoOptions);\n\n})()\n","(()=>{\nconst casinoOptions = window.__OPTIONS__;\nconst customLicenses = ['netherlands', 'swedish', 'italian', 'switzerland'];\n\nfunction handleCustomLicenses(options, customLicenses) {\n\tdocument.querySelectorAll('.casual_custom_license').forEach((fragment) => {\n\t\tif (!customLicenses.includes(options?.license_rules?.license)) {\n\t\t\tfragment.remove();\n\t\t}\n\t});\n}\n\nhandleCustomLicenses(casinoOptions, customLicenses);\n\n})()\n","(()=>{\nconst casinoOptions = window.__OPTIONS__;\n\nfunction handleGameVersion(options) {\n    const gameVersion = options?.version;\n\n    document.querySelectorAll('.game_version').forEach((fragment) => {\n        if (!gameVersion) {\n            fragment.remove();\n        } else {\n            fragment.textContent = fragment.textContent.replaceAll('{game_version}', `${gameVersion}`);\n        }\n    });\n}\n\nhandleGameVersion(casinoOptions);\n\n})()\n","(()=>{\nconst PURCHASE_KEYS_REGEX = /buy|chance/;\nconst NETHERLANDS_RTP_TO_RENDER = /(main|chance)/;\n\nfunction getFinalRtpValues(options, isNeedRemovePurchasesRtp) {\n    const rtp = options?.math?.rtp ?? null;\n\n    if (!rtp || !isNeedRemovePurchasesRtp) return rtp;\n\n    return Object.entries(rtp).reduce((result, [rtpName, rtpValue]) => {\n        if (!PURCHASE_KEYS_REGEX.test(rtpName)) {\n            result[rtpName] = rtpValue;\n        }\n        return result;\n    }, {});\n}\n\nfunction removeBonusRtpFromRules(rtp, isNeedRemovePurchasesRtp) {\n    document.querySelectorAll('[class*=\"rtp\"]').forEach((fragment) => {\n        const rtpName = fragment.className.replace('rtp-', '');\n        const isNeedRemoveStaticRtp = isNeedRemovePurchasesRtp && PURCHASE_KEYS_REGEX.test(rtpName);\n        const isNeedRemoveDynamicRtp = rtp && !rtp[rtpName];\n\n        if (isNeedRemoveDynamicRtp || isNeedRemoveStaticRtp) {\n            fragment.parentElement.removeChild(fragment);\n        }\n    });\n}\n\nfunction removeAllBonusRtpExeptChance(rtp, isNeedRemoveRtp) {\n    document.querySelectorAll('[class*=\"rtp\"]').forEach((fragment) => {\n        const rtpName = fragment.className.replace('rtp-', '');\n        const isNeedRemoveStaticRtp = isNeedRemoveRtp && !NETHERLANDS_RTP_TO_RENDER.test(rtpName);\n        const isNeedRemoveDynamicRtp = rtp && !rtp[rtpName];\n\n        if (isNeedRemoveDynamicRtp || isNeedRemoveStaticRtp) {\n            fragment.parentElement.removeChild(fragment);\n        }\n    });\n}\n\nfunction replaceContent() {\n    const casinoOptions = window.__OPTIONS__;\n\n    const rulesLicense = casinoOptions?.license_rules?.license ?? 'empty';\n    const isNeedRemovePurchasesRtp = rulesLicense === 'greek';\n    const isNeedRemovePurchasesRtpForNetherlands = rulesLicense === 'netherlands';\n    const isNeedRemovePurchasesRtpForPortuguese = rulesLicense === 'portuguese';\n    const isNeedRemoveRtp = isNeedRemovePurchasesRtpForNetherlands || isNeedRemovePurchasesRtpForPortuguese;\n\n    const rtp = getFinalRtpValues(casinoOptions, isNeedRemovePurchasesRtp);\n    removeBonusRtpFromRules(rtp, isNeedRemovePurchasesRtp);\n    removeAllBonusRtpExeptChance(rtp, isNeedRemoveRtp);\n}\n\nreplaceContent();\n\n})()\n"]}