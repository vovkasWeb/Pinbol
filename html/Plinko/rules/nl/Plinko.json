{"content":"<div id=\"rules\">\n<h1 id=\"plinko-rules\">Plinko rules</h1>\n\n<h2 id=\"introductie\">Introductie</h2>\n\n<p>Plinko is een eigenaardig kansspel gespeeld met een bal die “plinkt” langs het verticale bord gevuld met schuine rijen pinnen, een erg populair spel bekeken op TV-shows in de 20e eeuw.  BGaming stelt het bord voor in de vorm van een pyramide. De gameplay is bijzonder simpel: De speler kiest uit 8 tot 16 rijen en hoopt dat de bal in een van de gekozen gaten met de beste uitbetaling valt. Vervolgens ziet hij het stuiterproces via de obstakels vanaf de top van de pyramide omlaag langs het bord. De bal eindigt uiteindelijk aan de onderste pin en bepaalt de prijs. Welkom dus in Plinko’s plinkerig complexe systeem, vertrouw op uw geluk en laat de bal vallen!</p>\n\n<h2 id=\"regels\">Regels</h2>\n\n<p>Het doel bestaat eruit geld te winnen door de Plinko-bal te laten vallen en te wachten tot het in de hoogste geldslot valt aan de onderzijde van het bord.</p>\n\n<h2 id=\"inzetten\">Inzetten</h2>\n\n<p>Kies het inzetbedrag. Hiervoor kunt u de knoppen <strong>“-”</strong>, <strong>“+”</strong>, <strong>“Min”</strong> en <strong>“Max”</strong> gebruiken. Wanneer het maximale bedrag wordt bereikt, worden de knoppen <strong>“+”</strong> en <strong>“Max”</strong> uitgeschakeld. Wanneer het minimale bedrag wordt bereikt, worden de knoppen <strong>“-”</strong> en <strong>“Min”</strong> uitgeschakeld. Kies het risiconiveau: Laag, Normaal of Hoog. Kies het aantal lijnen in het spel: van 8 tot en met 16. Kies de Inzetmodus: Manueel of Auto.</p>\n\n<p>Druk op de knop <strong>Spelen</strong> om de spelronde te starten. Alle inzetknoppen worden uitgeschakeld tijdens de ronde, behalve <strong>Inzetmodus</strong>. Tijdens de ronde kan er een andere ronde met dezelfde instellingen gestart worden met behulp van de knop <strong>Spelen</strong>. Aan het einde van elke ronde bereikt de bal de sleuf. De getallen weergegeven op elke sleuf vertegenwoordigen vermenigvuldigingswaarden. De vermenigvuldiger in de sleuf waarin de bal belandt, wordt toegepast op de inzet van de speler. De uiteindelijke uitbetaling wordt berekend door de inzet van de speler te vermenigvuldigen met alle toepasbare vermenigvuldigingswaarden.</p>\n\n<p>In <strong>Auto-modus</strong> wordt het veld met het aantal automatische inzetten weergegeven. Kies het <strong>aantal inzetten</strong>. Druk op de knop <strong>Spelen</strong>. De knop <strong>Spelen</strong> wordt gewijzigd in <strong>Stop</strong> met het aantal resterende inzetten. Een reeks ronden kan worden voltooid als het ingestelde aantal ronden is bereikt, door op de knop <strong>Stop</strong> te klikken of als er niet voldoende geld in het saldo beschikbaar is.</p>\n\n<p><span class=\"min_max_bet\">De minimale inzetwaarde bedraagt {min_bet}. De maximale inzetwaarde bedraagt {max_bet}</span></p>\n\n<h2 id=\"resultaten\">Resultaten</h2>\n\n<p>De berekening van de winst gebeurt op basis van de uitbetalingstabel. Het resultaat wordt toegevoegd in het saldoveld. De omvang van de betalingen varieert van laag naar hoog.</p>\n\n<div class=\"license-block-casual casual_custom_license\">\n\n  <h2 id=\"licentievereisten\">Licentievereisten</h2>\n\n  <p><span class=\"__OPTIONS__-license_rules-license netherlands\">\nDe Auto-modus is in het spel mogelijk niet beschikbaar vanwege de vereisten van de licentie die het werk van de operator reguleert.\n</span></p>\n\n  <p><span class=\"__OPTIONS__-license_rules-license netherlands\">\nSnel spinnen kan in het spel niet beschikbaar zijn vanwege de vereisten van de licentie die het werk van de operator reguleert.\n</span></p>\n\n  <p><span class=\"casual_custom_license\"> De mogelijkheid om nog een ronde te starten met dezelfde instellingen met behulp van de knop ‘Spelen’ tijdens de huidige ronde os mogelijk niet beschikbaar vanwege de licentie die het werk van de operator reguleert. In dit geval blijft de knop ‘Spelen’ inactief tot de huidige ronde is voltooid en de resultaten worden weergegeven. Er kan slechts één ronde tegelijk gespeeld worden.</span></p>\n\n</div>\n\n<h2 id=\"opbrengst-voor-de-speler\">Opbrengst voor de speler</h2>\n\n<p>De algemene theoretische Opbrengst voor de speler (RTP) is {RTP.min_rtp}% - {RTP.max_rtp}%, afhankelijk van de door de speler gekozen strategie.</p>\n\n<p>Storingen verklaren alle spelen en uitbetalingen nietig! Alle onvoltooide ronden worden elke 24 uur beëindigd. Als het spel “Verzamelen” vereist, vindt het “Verzamelen” plaats en wordt de winst van de ronde toegevoegd aan het saldo van de speler. Als het spel actie van de speler vereist, wordt het resultaat berekend ervan uitgaande dat de speler de actie zonder risico gekozen heeft zonder de oorspronkelijke inzet te verhogen.</p>\n\n<p><span class=\"game_version\">Spelversie {game_version}.</span></p>\n\n<p>De spelregels die gepubliceerd staan op deze website zijn in het Engels. Vertalingen in andere talen zijn in goed vertrouwen gedeeld. In het geval van een verschil tussen de vertalingen, heeft de Engelse versie de voorkeur.</p>\n</div>\n","contentUpdateScript":"const casinoOptions = window.__OPTIONS__;\nlet customRulesStyle = '';\n\nif (casinoOptions?.math?.gamble_limit) {\n    content = content.replaceAll('{GAMBLE_LIMIT}', casinoOptions.math.gamble_limit);\n}\n\n//INFO: temporary solution for BGG-7896 & BGG-11170, but we need more flexible solution\nconst licenseDisabled = [\"empty\", \"switzerland\"];\nconst rulesLicense = casinoOptions?.license_rules?.license ?? \"empty\";\nif (licenseDisabled.includes(rulesLicense)) {\n    customRulesStyle += ` .license-block { display: none } `;\n}\n\nif (rulesLicense === \"empty\") {\n\tcustomRulesStyle += ` .license-block-casual { display: none } `;\n}\n\n// BGG-11165: Allow custom rules for any license\ncustomRulesStyle += ` .__OPTIONS__-license_rules-license { display: none } `;\ncustomRulesStyle += ` .__OPTIONS__-license_rules-license.${rulesLicense} { display: unset } `;\n\nif (casinoOptions?.ui?.show_rtp_in_rules === false) {\n    const rtpRegExp = /<h\\d[^>]*>[^>]*<\\/h\\d>[^<]*<p>[^<]*(\\{RTP.+\\}|\\d[^<]*%)[^<]*<\\/p>[^<]*/;\n\n    content = content.replace(rtpRegExp, '');\n}\n\nif (casinoOptions?.math?.rtp) {\n    if (!isNaN(casinoOptions.math.rtp)) {\n        casinoOptions.math.rtp = { main: casinoOptions.math.rtp };\n    }\n\n    content = content.replaceAll(`{RTP_VALUE}`, `{RTP.main}`);\n    Object.keys(casinoOptions.math.rtp).forEach((key) => {\n        content = content.replaceAll(`{RTP.${key}}`, casinoOptions.math.rtp[key]);\n    });\n}\n\nif (casinoOptions?.custom?.paytableFormatted) {\n    Object.keys(casinoOptions.custom.paytableFormatted).forEach((key) => {\n        content = content.replaceAll(`{PAYTABLE.${key}}`, casinoOptions.custom.paytableFormatted[key]);\n    });\n}\n\nif (casinoOptions?.custom?.wintableFormatted) {\n\tObject.keys(casinoOptions.custom.wintableFormatted).forEach((key) => {\n\t\tcontent = content.replaceAll(`{WIN.${key}}`, casinoOptions.custom.wintableFormatted[key]);\n\t});\n}\n\nif (casinoOptions?.custom?.maxWinsFormatted) {\n    casinoOptions.custom.maxWinsFormatted.forEach((winFormatted, index) => {\n        content = content.replaceAll(`{MAX_WIN.${index}}`, winFormatted);\n    });\n}\n\nif (casinoOptions?.custom?.betFormatted) {\n    content = content.replaceAll(`{BET_FORMATTED}`, casinoOptions.custom.betFormatted);\n}\n\nif (customRulesStyle !== '') {\n    content = '<style>' + customRulesStyle + '</style>' + content;\n}\n\nreturn content;\n\n","domScripts":["(()=>{\nconst casinoOptions = window.__OPTIONS__;\n\nfunction formatBet(bet, subunits, exponent = 0) {\n    const betValue = bet / subunits;\n    let ret;\n\n    if (exponent > 0) {\n        let str = betValue.toFixed(exponent).split('.');\n        if (str[0].length > 3) {\n            str[0] = str[0].replace(/(.)(?=(.{3})+$)/g, '$1 ');\n        }\n        ret = str.join('.');\n    } else {\n        ret = betValue.toFixed(0).replace(/(.)(?=(.{3})+$)/g, '$1 ');\n    }\n    return ret;\n}\n\nfunction setMinMaxBets(options) {\n    const { rules, license_rules } = options;\n    const { min_bet, max_bet, currency } = rules || {};\n    const { symbol, exponent, subunits } = currency || {};\n\n    const isNeedToRemoveMinMaxBetBlock =\n        license_rules?.license !== 'switzerland' && license_rules?.license !== 'danish' && license_rules?.license !== 'swedish';\n    document.querySelectorAll('.min_max_bet').forEach((fragment) => {\n        if (isNeedToRemoveMinMaxBetBlock || (!min_bet && !max_bet)) {\n            fragment.remove();\n        } else {\n            const currencySymbol = symbol || '';\n            const minBet = formatBet(min_bet, subunits, exponent);\n            const maxBet = formatBet(max_bet, subunits, exponent);\n            fragment.textContent = fragment.textContent.replace('{min_bet}', `${minBet} ${currencySymbol}`);\n            fragment.textContent = fragment.textContent.replace('{max_bet}', `${maxBet} ${currencySymbol}`);\n        }\n    });\n}\n\nsetMinMaxBets(casinoOptions);\n\n})()\n","(()=>{\nconst casinoOptions = window.__OPTIONS__;\nconst customLicenses = ['netherlands', 'swedish', 'italian', 'switzerland'];\n\nfunction handleCustomLicenses(options, customLicenses) {\n\tdocument.querySelectorAll('.casual_custom_license').forEach((fragment) => {\n\t\tif (!customLicenses.includes(options?.license_rules?.license)) {\n\t\t\tfragment.remove();\n\t\t}\n\t});\n}\n\nhandleCustomLicenses(casinoOptions, customLicenses);\n\n})()\n","(()=>{\nconst casinoOptions = window.__OPTIONS__;\n\nfunction handleGameVersion(options) {\n    const gameVersion = options?.version;\n\n    document.querySelectorAll('.game_version').forEach((fragment) => {\n        if (!gameVersion) {\n            fragment.remove();\n        } else {\n            fragment.textContent = fragment.textContent.replaceAll('{game_version}', `${gameVersion}`);\n        }\n    });\n}\n\nhandleGameVersion(casinoOptions);\n\n})()\n","(()=>{\nconst PURCHASE_KEYS_REGEX = /buy|chance/;\nconst NETHERLANDS_RTP_TO_RENDER = /(main|chance)/;\n\nfunction getFinalRtpValues(options, isNeedRemovePurchasesRtp) {\n    const rtp = options?.math?.rtp ?? null;\n\n    if (!rtp || !isNeedRemovePurchasesRtp) return rtp;\n\n    return Object.entries(rtp).reduce((result, [rtpName, rtpValue]) => {\n        if (!PURCHASE_KEYS_REGEX.test(rtpName)) {\n            result[rtpName] = rtpValue;\n        }\n        return result;\n    }, {});\n}\n\nfunction removeBonusRtpFromRules(rtp, isNeedRemovePurchasesRtp) {\n    document.querySelectorAll('[class*=\"rtp\"]').forEach((fragment) => {\n        const rtpName = fragment.className.replace('rtp-', '');\n        const isNeedRemoveStaticRtp = isNeedRemovePurchasesRtp && PURCHASE_KEYS_REGEX.test(rtpName);\n        const isNeedRemoveDynamicRtp = rtp && !rtp[rtpName];\n\n        if (isNeedRemoveDynamicRtp || isNeedRemoveStaticRtp) {\n            fragment.parentElement.removeChild(fragment);\n        }\n    });\n}\n\nfunction removeAllBonusRtpExeptChance(rtp, isNeedRemoveRtp) {\n    document.querySelectorAll('[class*=\"rtp\"]').forEach((fragment) => {\n        const rtpName = fragment.className.replace('rtp-', '');\n        const isNeedRemoveStaticRtp = isNeedRemoveRtp && !NETHERLANDS_RTP_TO_RENDER.test(rtpName);\n        const isNeedRemoveDynamicRtp = rtp && !rtp[rtpName];\n\n        if (isNeedRemoveDynamicRtp || isNeedRemoveStaticRtp) {\n            fragment.parentElement.removeChild(fragment);\n        }\n    });\n}\n\nfunction replaceContent() {\n    const casinoOptions = window.__OPTIONS__;\n\n    const rulesLicense = casinoOptions?.license_rules?.license ?? 'empty';\n    const isNeedRemovePurchasesRtp = rulesLicense === 'greek';\n    const isNeedRemovePurchasesRtpForNetherlands = rulesLicense === 'netherlands';\n    const isNeedRemovePurchasesRtpForPortuguese = rulesLicense === 'portuguese';\n    const isNeedRemoveRtp = isNeedRemovePurchasesRtpForNetherlands || isNeedRemovePurchasesRtpForPortuguese;\n\n    const rtp = getFinalRtpValues(casinoOptions, isNeedRemovePurchasesRtp);\n    removeBonusRtpFromRules(rtp, isNeedRemovePurchasesRtp);\n    removeAllBonusRtpExeptChance(rtp, isNeedRemoveRtp);\n}\n\nreplaceContent();\n\n})()\n"]}