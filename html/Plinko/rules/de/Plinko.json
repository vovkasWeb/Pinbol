{"content":"<div id=\"rules\">\n<h1 id=\"plinko-regeln\">Plinko Regeln</h1>\n\n<h2 id=\"einfhrung\">Einführung</h2>\n\n<p>Plinko ist das eigentümliche Glücksspiel, das mit einer Kugel gespielt wird. Die Kugel wird auf einem vertikalen Brett mit versetzten Reihen von Pflöcken gespielt. Ein sehr beliebtes Spiel in Fernsehshows des 20. Jahrhunderts.  BGaming stellte das Brett in Form einer Pyramide dar. Das Spielprinzip ist denkbar einfach: Der Spieler wählt eine von 8 bis 16 Reihen aus und hofft, dass die Kugel in eines der gewählten Löcher mit der besten Auszahlung fällt, und beobachtet einfach den „Hüpfprozess durch die Hindernisse“ von der Spitze der Pyramide bis zum Brettboden. Der Ball landet schließlich auf dem untersten Pflock und bestimmt den Preis. Willkommen im komplizierten System des Plinko, vertrauen Sie auf Ihr Glück und lassen Sie die Kugel fallen!</p>\n\n<h2 id=\"regeln\">Regeln</h2>\n\n<p>Das Ziel ist es, Geld zu gewinnen, indem Sie die Plinko-Kugel fallen lassen und warten, bis sie im höchsten Geldschlitz am unteren Rand des Spielfelds landet.</p>\n\n<h2 id=\"einstze\">Einsätze</h2>\n\n<p>Wählen Sie die Einsatzhöhe aus. Die Schaltflächen <strong>-</strong>, <strong>+</strong>, <strong>Min</strong>, <strong>Max</strong> stehen zur Verfügung. Wenn der maximale Betrag erreicht ist, werden die Tasten <strong>+</strong> und <strong>Max</strong> deaktiviert. Wenn der Mindestbetrag erreicht ist, werden die Tasten <strong>-</strong> und <strong>Min</strong> deaktiviert. Wählen Sie die Risikostufe: Niedrig, Normal oder Hoch. Wählen Sie die Anzahl der Linien im Spiel: von 8 bis 16. Wählen Sie den Einsatzmodus: Manuell oder Automatisch.</p>\n\n<p>Um die Spielrunde zu starten, drücken Sie die Schaltfläche <strong>Spielen</strong>. Alle Einsatz-Schaltflächen sind während der laufenden Runde deaktiviert, außer <strong>Einsatzmodus</strong>. Während der Runde kann eine weitere Runde mit den gleichen Einstellungen mit der Taste <strong>Spielen</strong> gestartet werden. Am Ende der Runde erreicht der Ball die Tasche. Die in jeder Tasche angezeigten Zahlen stellen Multiplikatorwerte dar. Der Multiplikator der Tasche, in der die Kugel gelandet ist, wird auf den Einsatz des Spielers angewendet. Die endgültige Auszahlung wird berechnet, indem der Einsatz des Spielers mit allen anwendbaren Multiplikatorwerten multipliziert wird.</p>\n\n<p>Im <strong>Auto-Modus</strong> wird das Feld mit der Anzahl der automatischen Einsätze angezeigt. Wählen Sie die <strong>Anzahl der Einsätze</strong>. Drücken Sie die Schaltfläche <strong>Spielen</strong>. Die Schaltfläche <strong>Spielen</strong> wechselt mit der Anzahl der verbliebenen Einsätze zu <strong>Stoppen</strong>. Eine Folge von Runden kann beendet werden, wenn die eingestellte Anzahl von Runden erreicht ist, indem Sie auf die Schaltfläche <strong>Stopp</strong> klicken, wenn nicht genügend Guthaben auf dem Spielkonto ist.</p>\n\n<p><span class=\"min_max_bet\">Der Mindesteinsatz beträgt {min_bet}. Der maximale Einsatzwert beträgt {max_bet}.</span></p>\n\n<h2 id=\"ergebnisse\">Ergebnisse</h2>\n\n<p>Die Berechnung des Gewinns erfolgt gemäß der Auszahlungstabelle. Der Gewinn wird dem Guthaben hinzugefügt. Die Höhe der Auszahlungen variiert von niedrig bis hoch.</p>\n\n<div class=\"license-block-casual casual_custom_license\">\n\n  <h2 id=\"lizenzanforderungen\">Lizenzanforderungen</h2>\n\n  <p><span class=\"__OPTIONS__-license_rules-license netherlands\">\nDer Auto-Modus kann aufgrund der Lizenzanforderungen, die die Tätigkeiten des Betreibers regeln, im Spiel nicht verfügbar sein.\n</span></p>\n\n  <p><span class=\"__OPTIONS__-license_rules-license netherlands\">\nSchnelldrehs können aufgrund der Lizenzanforderungen, die die Tätigkeiten des Betreibers regeln, im Spiel nicht verfügbar sein.\n</span></p>\n\n  <p><span class=\"casual_custom_license\">Die Möglichkeit, eine weitere Runde mit denselben Einstellungen zu starten, indem Sie während der laufenden Runde auf die Schaltfläche „Spielen“ klicken, ist im Spiel aufgrund der Lizenz, die die Arbeit des Betreibers regelt, möglicherweise nicht verfügbar. In diesem Fall bleibt die Schaltfläche „Spielen“ inaktiv, bis die aktuelle Runde abgeschlossen ist und die Ergebnisse angezeigt werden. Es kann jeweils nur eine Runde gespielt werden.</span></p>\n\n</div>\n\n<h2 id=\"spielerrendite\">Spielerrendite</h2>\n\n<p>Die gesamte theoretische Spielerrendite (Return to Player, RTP) beträgt {RTP.min_rtp} % – {RTP.max_rtp} %, je nach der vom Spieler gewählten Strategie.</p>\n\n<p>Bei einer Fehlfunktion sind alle Spiele und Zahlungen ungültig! Alle nicht beendeten Runden werden alle 24 Stunden beendet. Wenn das Spiel „Kassieren“ erfordert, wird der Gewinn aus der Runde dem Guthaben des Spielers hinzugefügt. Erfordert das Spiel eine Aktion des Spielers, dann wird das Ergebnis unter der Annahme berechnet, dass der Spieler die Aktion ohne Risiko und ohne Erhöhung des ursprünglichen Einsatzes gewählt hat.</p>\n\n<p><span class=\"game_version\">Spielversion {game_version}.</span></p>\n\n<p>Die Spielregeln, wie sie auf dieser Website veröffentlicht sind, sind in Englisch. Übersetzungen in andere Sprachen werden als Service in gutem Glauben zur Verfügung gestellt. Bei Unklarheiten zwischen einer englischen Version und einer Übersetzung behält die englische Version immer den Vorrang.</p>\n</div>\n","contentUpdateScript":"const casinoOptions = window.__OPTIONS__;\nlet customRulesStyle = '';\n\nif (casinoOptions?.math?.gamble_limit) {\n    content = content.replaceAll('{GAMBLE_LIMIT}', casinoOptions.math.gamble_limit);\n}\n\n//INFO: temporary solution for BGG-7896 & BGG-11170, but we need more flexible solution\nconst licenseDisabled = [\"empty\", \"switzerland\"];\nconst rulesLicense = casinoOptions?.license_rules?.license ?? \"empty\";\nif (licenseDisabled.includes(rulesLicense)) {\n    customRulesStyle += ` .license-block { display: none } `;\n}\n\nif (rulesLicense === \"empty\") {\n\tcustomRulesStyle += ` .license-block-casual { display: none } `;\n}\n\n// BGG-11165: Allow custom rules for any license\ncustomRulesStyle += ` .__OPTIONS__-license_rules-license { display: none } `;\ncustomRulesStyle += ` .__OPTIONS__-license_rules-license.${rulesLicense} { display: unset } `;\n\nif (casinoOptions?.ui?.show_rtp_in_rules === false) {\n    const rtpRegExp = /<h\\d[^>]*>[^>]*<\\/h\\d>[^<]*<p>[^<]*(\\{RTP.+\\}|\\d[^<]*%)[^<]*<\\/p>[^<]*/;\n\n    content = content.replace(rtpRegExp, '');\n}\n\nif (casinoOptions?.math?.rtp) {\n    if (!isNaN(casinoOptions.math.rtp)) {\n        casinoOptions.math.rtp = { main: casinoOptions.math.rtp };\n    }\n\n    content = content.replaceAll(`{RTP_VALUE}`, `{RTP.main}`);\n    Object.keys(casinoOptions.math.rtp).forEach((key) => {\n        content = content.replaceAll(`{RTP.${key}}`, casinoOptions.math.rtp[key]);\n    });\n}\n\nif (casinoOptions?.custom?.paytableFormatted) {\n    Object.keys(casinoOptions.custom.paytableFormatted).forEach((key) => {\n        content = content.replaceAll(`{PAYTABLE.${key}}`, casinoOptions.custom.paytableFormatted[key]);\n    });\n}\n\nif (casinoOptions?.custom?.wintableFormatted) {\n\tObject.keys(casinoOptions.custom.wintableFormatted).forEach((key) => {\n\t\tcontent = content.replaceAll(`{WIN.${key}}`, casinoOptions.custom.wintableFormatted[key]);\n\t});\n}\n\nif (casinoOptions?.custom?.maxWinsFormatted) {\n    casinoOptions.custom.maxWinsFormatted.forEach((winFormatted, index) => {\n        content = content.replaceAll(`{MAX_WIN.${index}}`, winFormatted);\n    });\n}\n\nif (casinoOptions?.custom?.betFormatted) {\n    content = content.replaceAll(`{BET_FORMATTED}`, casinoOptions.custom.betFormatted);\n}\n\nif (customRulesStyle !== '') {\n    content = '<style>' + customRulesStyle + '</style>' + content;\n}\n\nreturn content;\n\n","domScripts":["(()=>{\nconst casinoOptions = window.__OPTIONS__;\n\nfunction formatBet(bet, subunits, exponent = 0) {\n    const betValue = bet / subunits;\n    let ret;\n\n    if (exponent > 0) {\n        let str = betValue.toFixed(exponent).split('.');\n        if (str[0].length > 3) {\n            str[0] = str[0].replace(/(.)(?=(.{3})+$)/g, '$1 ');\n        }\n        ret = str.join('.');\n    } else {\n        ret = betValue.toFixed(0).replace(/(.)(?=(.{3})+$)/g, '$1 ');\n    }\n    return ret;\n}\n\nfunction setMinMaxBets(options) {\n    const { rules, license_rules } = options;\n    const { min_bet, max_bet, currency } = rules || {};\n    const { symbol, exponent, subunits } = currency || {};\n\n    const isNeedToRemoveMinMaxBetBlock =\n        license_rules?.license !== 'switzerland' && license_rules?.license !== 'danish' && license_rules?.license !== 'swedish';\n    document.querySelectorAll('.min_max_bet').forEach((fragment) => {\n        if (isNeedToRemoveMinMaxBetBlock || (!min_bet && !max_bet)) {\n            fragment.remove();\n        } else {\n            const currencySymbol = symbol || '';\n            const minBet = formatBet(min_bet, subunits, exponent);\n            const maxBet = formatBet(max_bet, subunits, exponent);\n            fragment.textContent = fragment.textContent.replace('{min_bet}', `${minBet} ${currencySymbol}`);\n            fragment.textContent = fragment.textContent.replace('{max_bet}', `${maxBet} ${currencySymbol}`);\n        }\n    });\n}\n\nsetMinMaxBets(casinoOptions);\n\n})()\n","(()=>{\nconst casinoOptions = window.__OPTIONS__;\nconst customLicenses = ['netherlands', 'swedish', 'italian', 'switzerland'];\n\nfunction handleCustomLicenses(options, customLicenses) {\n\tdocument.querySelectorAll('.casual_custom_license').forEach((fragment) => {\n\t\tif (!customLicenses.includes(options?.license_rules?.license)) {\n\t\t\tfragment.remove();\n\t\t}\n\t});\n}\n\nhandleCustomLicenses(casinoOptions, customLicenses);\n\n})()\n","(()=>{\nconst casinoOptions = window.__OPTIONS__;\n\nfunction handleGameVersion(options) {\n    const gameVersion = options?.version;\n\n    document.querySelectorAll('.game_version').forEach((fragment) => {\n        if (!gameVersion) {\n            fragment.remove();\n        } else {\n            fragment.textContent = fragment.textContent.replaceAll('{game_version}', `${gameVersion}`);\n        }\n    });\n}\n\nhandleGameVersion(casinoOptions);\n\n})()\n","(()=>{\nconst PURCHASE_KEYS_REGEX = /buy|chance/;\nconst NETHERLANDS_RTP_TO_RENDER = /(main|chance)/;\n\nfunction getFinalRtpValues(options, isNeedRemovePurchasesRtp) {\n    const rtp = options?.math?.rtp ?? null;\n\n    if (!rtp || !isNeedRemovePurchasesRtp) return rtp;\n\n    return Object.entries(rtp).reduce((result, [rtpName, rtpValue]) => {\n        if (!PURCHASE_KEYS_REGEX.test(rtpName)) {\n            result[rtpName] = rtpValue;\n        }\n        return result;\n    }, {});\n}\n\nfunction removeBonusRtpFromRules(rtp, isNeedRemovePurchasesRtp) {\n    document.querySelectorAll('[class*=\"rtp\"]').forEach((fragment) => {\n        const rtpName = fragment.className.replace('rtp-', '');\n        const isNeedRemoveStaticRtp = isNeedRemovePurchasesRtp && PURCHASE_KEYS_REGEX.test(rtpName);\n        const isNeedRemoveDynamicRtp = rtp && !rtp[rtpName];\n\n        if (isNeedRemoveDynamicRtp || isNeedRemoveStaticRtp) {\n            fragment.parentElement.removeChild(fragment);\n        }\n    });\n}\n\nfunction removeAllBonusRtpExeptChance(rtp, isNeedRemoveRtp) {\n    document.querySelectorAll('[class*=\"rtp\"]').forEach((fragment) => {\n        const rtpName = fragment.className.replace('rtp-', '');\n        const isNeedRemoveStaticRtp = isNeedRemoveRtp && !NETHERLANDS_RTP_TO_RENDER.test(rtpName);\n        const isNeedRemoveDynamicRtp = rtp && !rtp[rtpName];\n\n        if (isNeedRemoveDynamicRtp || isNeedRemoveStaticRtp) {\n            fragment.parentElement.removeChild(fragment);\n        }\n    });\n}\n\nfunction replaceContent() {\n    const casinoOptions = window.__OPTIONS__;\n\n    const rulesLicense = casinoOptions?.license_rules?.license ?? 'empty';\n    const isNeedRemovePurchasesRtp = rulesLicense === 'greek';\n    const isNeedRemovePurchasesRtpForNetherlands = rulesLicense === 'netherlands';\n    const isNeedRemovePurchasesRtpForPortuguese = rulesLicense === 'portuguese';\n    const isNeedRemoveRtp = isNeedRemovePurchasesRtpForNetherlands || isNeedRemovePurchasesRtpForPortuguese;\n\n    const rtp = getFinalRtpValues(casinoOptions, isNeedRemovePurchasesRtp);\n    removeBonusRtpFromRules(rtp, isNeedRemovePurchasesRtp);\n    removeAllBonusRtpExeptChance(rtp, isNeedRemoveRtp);\n}\n\nreplaceContent();\n\n})()\n"]}