{"content":"<div id=\"rules\">\n<h1 id=\"plinko\">Κανόνες Plinko</h1>\n\n<h2 id=\"section\">Εισαγωγή</h2>\n\n<p>Το Plinko είναι ένα ιδιαίτερο παιχνίδι τύχης που παίζεται με μια μπάλα που ρίχνεται από τον κατακόρυφο πίνακα που περιέχει μετατοπισμένες σειρές και πασαλάκια· ένα πολύ δημοφιλές παιχνίδι που προβλήθηκε στις τηλεοπτικές εκπομπές στον 20ο αιώνα.  Η BGaming αντικατέστησε τον πίνακα με τη μορφή πυραμίδας. Το παιχνίδι είναι απλό: ο παίκτης επιλέγει από 8 έως 16 σειρές, ελπίζοντας ότι η μπάλα θα πέσει σε μία από τις επιλεγμένες τρύπες με την καλύτερη πληρωμή και παρακολουθώντας την μπάλα να αναπηδάει ανάμεσα από τα εμπόδια από την κορυφή της πυραμίδας έως το κάτω μέρος της. Η μπάλα τελικά καταλήγει στο τελευταίο πασαλάκι και καθορίζει το έπαθλο. Καλώς ήρθατε λοιπόν στο περίπλοκο σύστημα του Plinko, εμπιστευτείτε την τύχη σας και αφήστε την μπάλα να πέσει!</p>\n\n<h2 id=\"section-1\">Κανόνες</h2>\n\n<p>Σκοπός σας είναι να κερδίσετε χρήματα ρίχνοντας την μπάλα Plinko και να περιμένετε μέχρι να πέσει στην υψηλότερη θέση χρημάτων στο κάτω μέρος του πίνακα.</p>\n\n<h2 id=\"section-2\">Κανόνες</h2>\n\n<p>Επιλέξτε το ποσό πονταρίσματος. Μπορούν να χρησιμοποιηθούν κουμπιά <strong>-</strong>, <strong>+</strong>, <strong>Ελάχ.</strong>, <strong>Μέγ.</strong>. Όταν επιτευχθεί το μέγιστο ποσό, τα κουμπιά <strong>+</strong> και <strong>Μέγ.</strong> απενεργοποιούνται. Όταν επιτευχθεί το ελάχιστο ποσό, τα κουμπιά <strong>-</strong> και <strong>Ελάχ.</strong> απενεργοποιούνται. Επιλέξτε το επίπεδο ρίσκου: Χαμηλό, Κανονικό ή Υψηλό. Επιλέξτε τον αριθμό των γραμμών στο παιχνίδι: από 8 έως 16. Επιλέξτε τη λειτουργία πονταρίσματος: Χειροκίνητη ή Αυτόματη.</p>\n\n<p>Για να ξεκινήσετε τον γύρο του παιχνιδιού πατήστε το κουμπί <strong>Εκκίνηση</strong>. Όλα τα κουμπιά στοιχηματισμού γίνονται ανενεργά κατά τη στιγμή του γύρου εκτός από την <strong>Λειτουργία πονταρίσματος</strong>. Κατά τη διάρκεια του γύρου, μπορεί να ξεκινήσει ένας άλλος γύρος με τις ίδιες ρυθμίσεις με το κουμπί <strong>Εκκίνηση</strong>. Στο τέλος κάθε γύρου, η μπίλια φτάνει στην υποδοχή. Οι αριθμοί που εμφανίζονται σε κάθε υποδοχή αντιπροσωπεύουν τιμές πολλαπλασιαστή. Ο πολλαπλασιαστής της υποδοχής, στην οποία κατέληξε η μπίλια, εφαρμόζεται στο ποντάρισμα του παίκτη. Η τελική πληρωμή υπολογίζεται πολλαπλασιάζοντας το ποντάρισμα του παίκτη με όλες τις ισχύουσες τιμές πολλαπλασιαστή.</p>\n\n<p>Στην <strong>Αυτόματη Λειτουργία</strong>, εμφανίζεται το πεδίο με τον αριθμό των αυτόματων πονταρισμάτων. Επιλέξτε τον <strong>αριθμό πονταρισμάτων</strong>. Πατήστε το κουμπί <strong>Εκκίνηση</strong>. Το κουμπί <strong>Εκκίνηση</strong> αλλάζει σε <strong>Διακοπή</strong> με τον αριθμό των υπολειπόμενων πονταρισμάτων. Μια σειρά γύρων μπορεί να ολοκληρωθεί αν συμπληρωθεί ο αριθμός των γύρων που έχουν τεθεί, κάνοντας κλικ στο κουμπί <strong>Διακοπή</strong>, εάν δεν υπάρχουν αρκετά χρήματα στο υπόλοιπο.</p>\n\n<p><span class=\"min_max_bet\">Η ελάχιστη αξία πονταρίσματος είναι {min_bet}. Η μέγιστη αξία πονταρίσματος είναι {max_bet}</span></p>\n\n<h2 id=\"section-3\">Αποτελέσματα</h2>\n\n<p>Ο υπολογισμός του κέρδους γίνεται σύμφωνα με τον πίνακα πληρωμών. Το αποτέλεσμα προστίθεται στο πεδίο υπολοίπου. Το μέγεθος των πληρωμών ποικίλλει από χαμηλό σε υψηλό.</p>\n\n<div class=\"license-block-casual casual_custom_license\">\n\n  <h2 id=\"section-4\">Απαιτήσεις άδειας</h2>\n\n  <p><span class=\"__OPTIONS__-license_rules-license netherlands\">\nΗ Αυτόματη Λειτουργία μπορεί να μην είναι διαθέσιμη στο παιχνίδι λόγω των απαιτήσεων της άδειας που ρυθμίζει την εργασία της εταιρείας.\n</span></p>\n\n  <p><span class=\"__OPTIONS__-license_rules-license netherlands\">\nΗ γρήγορες περιστροφές μπορεί να μην είναι διαθέσιμες στο παιχνίδι λόγω των απαιτήσεων της άδειας που ρυθμίζει την εργασία της εταιρείας.\n</span></p>\n\n  <p><span class=\"casual_custom_license\"> Η δυνατότητα να ξεκινήσετε έναν άλλο γύρο με τις ίδιες ρυθμίσεις χρησιμοποιώντας το κουμπί «Παιχνίδι» κατά τη διάρκεια του τρέχοντος γύρου ενδέχεται να μην είναι διαθέσιμη στο παιχνίδι λόγω της άδειας που ρυθμίζει την εργασία της διαχειρίστριας εταιρείας. Στην περίπτωση αυτή, το πλήκτρο «Παιχνίδι» θα παραμείνει ανενεργό μέχρι να ολοκληρωθεί ο τρέχων γύρος και να εμφανιστούν τα αποτελέσματα. Μπορεί να παιχτεί μόνο ένας γύρος τη φορά.</span></p>\n\n</div>\n\n<h2 id=\"section-5\">Επιστροφή στον παίκτη</h2>\n\n<p>Η συνολική θεωρητική Επιστροφή στον Παίκτη (RTP) είναι {RTP.min_rtp}% - {RTP.max_rtp}% ανάλογα με την επιλεγμένη στρατηγική του παίκτη.</p>\n\n<p>Τυχόν δυσλειτουργία ακυρώνει όλα τα παιχνίδια και πληρώνει! Όλοι οι ημιτελείς γύροι θα τερματίζονται κάθε 24 ώρες. Εάν το παιχνίδι απαιτεί “Συλλογή” - Η “Συλλογή” θα λάβει χώρα και το κέρδος από τον γύρο θα προστεθεί στο υπόλοιπο του παίκτη. Αν το παιχνίδι απαιτεί ενέργεια από τον παίκτη, το αποτέλεσμα υπολογίζεται υποθέτοντας ότι ο παίκτης έχει επιλέξει την ενέργεια χωρίς ρίσκο και χωρίς να αυξήσει το αρχικό ποντάρισμα.</p>\n\n<p><span class=\"game_version\">Έκδοση Παιχνιδιού {game_version}.</span></p>\n\n<p>Οι κανόνες των παιχνιδιών, που δημοσιεύονται σε αυτόν τον ιστότοπο, είναι στα αγγλικά. Οι μεταφράσεις σε άλλες γλώσσες παρέχονται ως καλόπιστη υπηρεσία. Σε περίπτωση ασάφειας μεταξύ της αγγλικής έκδοσης και της αντίστοιχης μετάφρασής της, προτεραιότητα θα έχει πάντα η αγγλική έκδοση.</p>\n</div>\n","contentUpdateScript":"const casinoOptions = window.__OPTIONS__;\nlet customRulesStyle = '';\n\nif (casinoOptions?.math?.gamble_limit) {\n    content = content.replaceAll('{GAMBLE_LIMIT}', casinoOptions.math.gamble_limit);\n}\n\n//INFO: temporary solution for BGG-7896 & BGG-11170, but we need more flexible solution\nconst licenseDisabled = [\"empty\", \"switzerland\"];\nconst rulesLicense = casinoOptions?.license_rules?.license ?? \"empty\";\nif (licenseDisabled.includes(rulesLicense)) {\n    customRulesStyle += ` .license-block { display: none } `;\n}\n\nif (rulesLicense === \"empty\") {\n\tcustomRulesStyle += ` .license-block-casual { display: none } `;\n}\n\n// BGG-11165: Allow custom rules for any license\ncustomRulesStyle += ` .__OPTIONS__-license_rules-license { display: none } `;\ncustomRulesStyle += ` .__OPTIONS__-license_rules-license.${rulesLicense} { display: unset } `;\n\nif (casinoOptions?.ui?.show_rtp_in_rules === false) {\n    const rtpRegExp = /<h\\d[^>]*>[^>]*<\\/h\\d>[^<]*<p>[^<]*(\\{RTP.+\\}|\\d[^<]*%)[^<]*<\\/p>[^<]*/;\n\n    content = content.replace(rtpRegExp, '');\n}\n\nif (casinoOptions?.math?.rtp) {\n    if (!isNaN(casinoOptions.math.rtp)) {\n        casinoOptions.math.rtp = { main: casinoOptions.math.rtp };\n    }\n\n    content = content.replaceAll(`{RTP_VALUE}`, `{RTP.main}`);\n    Object.keys(casinoOptions.math.rtp).forEach((key) => {\n        content = content.replaceAll(`{RTP.${key}}`, casinoOptions.math.rtp[key]);\n    });\n}\n\nif (casinoOptions?.custom?.paytableFormatted) {\n    Object.keys(casinoOptions.custom.paytableFormatted).forEach((key) => {\n        content = content.replaceAll(`{PAYTABLE.${key}}`, casinoOptions.custom.paytableFormatted[key]);\n    });\n}\n\nif (casinoOptions?.custom?.wintableFormatted) {\n\tObject.keys(casinoOptions.custom.wintableFormatted).forEach((key) => {\n\t\tcontent = content.replaceAll(`{WIN.${key}}`, casinoOptions.custom.wintableFormatted[key]);\n\t});\n}\n\nif (casinoOptions?.custom?.maxWinsFormatted) {\n    casinoOptions.custom.maxWinsFormatted.forEach((winFormatted, index) => {\n        content = content.replaceAll(`{MAX_WIN.${index}}`, winFormatted);\n    });\n}\n\nif (casinoOptions?.custom?.betFormatted) {\n    content = content.replaceAll(`{BET_FORMATTED}`, casinoOptions.custom.betFormatted);\n}\n\nif (customRulesStyle !== '') {\n    content = '<style>' + customRulesStyle + '</style>' + content;\n}\n\nreturn content;\n\n","domScripts":["(()=>{\nconst casinoOptions = window.__OPTIONS__;\n\nfunction formatBet(bet, subunits, exponent = 0) {\n    const betValue = bet / subunits;\n    let ret;\n\n    if (exponent > 0) {\n        let str = betValue.toFixed(exponent).split('.');\n        if (str[0].length > 3) {\n            str[0] = str[0].replace(/(.)(?=(.{3})+$)/g, '$1 ');\n        }\n        ret = str.join('.');\n    } else {\n        ret = betValue.toFixed(0).replace(/(.)(?=(.{3})+$)/g, '$1 ');\n    }\n    return ret;\n}\n\nfunction setMinMaxBets(options) {\n    const { rules, license_rules } = options;\n    const { min_bet, max_bet, currency } = rules || {};\n    const { symbol, exponent, subunits } = currency || {};\n\n    const isNeedToRemoveMinMaxBetBlock =\n        license_rules?.license !== 'switzerland' && license_rules?.license !== 'danish' && license_rules?.license !== 'swedish';\n    document.querySelectorAll('.min_max_bet').forEach((fragment) => {\n        if (isNeedToRemoveMinMaxBetBlock || (!min_bet && !max_bet)) {\n            fragment.remove();\n        } else {\n            const currencySymbol = symbol || '';\n            const minBet = formatBet(min_bet, subunits, exponent);\n            const maxBet = formatBet(max_bet, subunits, exponent);\n            fragment.textContent = fragment.textContent.replace('{min_bet}', `${minBet} ${currencySymbol}`);\n            fragment.textContent = fragment.textContent.replace('{max_bet}', `${maxBet} ${currencySymbol}`);\n        }\n    });\n}\n\nsetMinMaxBets(casinoOptions);\n\n})()\n","(()=>{\nconst casinoOptions = window.__OPTIONS__;\nconst customLicenses = ['netherlands', 'swedish', 'italian', 'switzerland'];\n\nfunction handleCustomLicenses(options, customLicenses) {\n\tdocument.querySelectorAll('.casual_custom_license').forEach((fragment) => {\n\t\tif (!customLicenses.includes(options?.license_rules?.license)) {\n\t\t\tfragment.remove();\n\t\t}\n\t});\n}\n\nhandleCustomLicenses(casinoOptions, customLicenses);\n\n})()\n","(()=>{\nconst casinoOptions = window.__OPTIONS__;\n\nfunction handleGameVersion(options) {\n    const gameVersion = options?.version;\n\n    document.querySelectorAll('.game_version').forEach((fragment) => {\n        if (!gameVersion) {\n            fragment.remove();\n        } else {\n            fragment.textContent = fragment.textContent.replaceAll('{game_version}', `${gameVersion}`);\n        }\n    });\n}\n\nhandleGameVersion(casinoOptions);\n\n})()\n","(()=>{\nconst PURCHASE_KEYS_REGEX = /buy|chance/;\nconst NETHERLANDS_RTP_TO_RENDER = /(main|chance)/;\n\nfunction getFinalRtpValues(options, isNeedRemovePurchasesRtp) {\n    const rtp = options?.math?.rtp ?? null;\n\n    if (!rtp || !isNeedRemovePurchasesRtp) return rtp;\n\n    return Object.entries(rtp).reduce((result, [rtpName, rtpValue]) => {\n        if (!PURCHASE_KEYS_REGEX.test(rtpName)) {\n            result[rtpName] = rtpValue;\n        }\n        return result;\n    }, {});\n}\n\nfunction removeBonusRtpFromRules(rtp, isNeedRemovePurchasesRtp) {\n    document.querySelectorAll('[class*=\"rtp\"]').forEach((fragment) => {\n        const rtpName = fragment.className.replace('rtp-', '');\n        const isNeedRemoveStaticRtp = isNeedRemovePurchasesRtp && PURCHASE_KEYS_REGEX.test(rtpName);\n        const isNeedRemoveDynamicRtp = rtp && !rtp[rtpName];\n\n        if (isNeedRemoveDynamicRtp || isNeedRemoveStaticRtp) {\n            fragment.parentElement.removeChild(fragment);\n        }\n    });\n}\n\nfunction removeAllBonusRtpExeptChance(rtp, isNeedRemoveRtp) {\n    document.querySelectorAll('[class*=\"rtp\"]').forEach((fragment) => {\n        const rtpName = fragment.className.replace('rtp-', '');\n        const isNeedRemoveStaticRtp = isNeedRemoveRtp && !NETHERLANDS_RTP_TO_RENDER.test(rtpName);\n        const isNeedRemoveDynamicRtp = rtp && !rtp[rtpName];\n\n        if (isNeedRemoveDynamicRtp || isNeedRemoveStaticRtp) {\n            fragment.parentElement.removeChild(fragment);\n        }\n    });\n}\n\nfunction replaceContent() {\n    const casinoOptions = window.__OPTIONS__;\n\n    const rulesLicense = casinoOptions?.license_rules?.license ?? 'empty';\n    const isNeedRemovePurchasesRtp = rulesLicense === 'greek';\n    const isNeedRemovePurchasesRtpForNetherlands = rulesLicense === 'netherlands';\n    const isNeedRemovePurchasesRtpForPortuguese = rulesLicense === 'portuguese';\n    const isNeedRemoveRtp = isNeedRemovePurchasesRtpForNetherlands || isNeedRemovePurchasesRtpForPortuguese;\n\n    const rtp = getFinalRtpValues(casinoOptions, isNeedRemovePurchasesRtp);\n    removeBonusRtpFromRules(rtp, isNeedRemovePurchasesRtp);\n    removeAllBonusRtpExeptChance(rtp, isNeedRemoveRtp);\n}\n\nreplaceContent();\n\n})()\n"]}