{"content":"<div id=\"rules\">\n<h1 id=\"aturan-plinko\">Aturan Plinko</h1>\n\n<h2 id=\"pengenalan\">Pengenalan</h2>\n\n<p>Plinko adalah permainan untung-untungan unik yang dimainkan dengan mengggulirkan bola, atau “plinking”, ke bawah papan vertikal yang berisi deretan pasak teratur. Permainan ini sangat populer di abad ke-20 dan muncul di banyak acara televisi.  BGaming menggunakan papan berbentuk piramida. Alur bermainnya mudah: pemain memilih mulai dari 8 hingga 16 baris dengan harapan bola akan jatuh ke salah satu lubang dengan pembayaran terbesar. Kemudian, pemain hanya tinggal melihat “proses bola memantul melewati pasak-pasak” tersebut dari atas ke bawah. Bola akan mendarat di pasak paling bawah dan menentukan hadiahnya. Jadi, selamat datang di sistem Plinko yang berliku, percayalah pada keberuntungan Anda dan jatuhkan bolanya!</p>\n\n<h2 id=\"aturan\">Aturan</h2>\n\n<p>Tujuannya adalah memenangkan uang dengan menjatuhkan bola Plinko dan menunggunya mendarat di slot uang tertinggi di bagian bawah papan.</p>\n\n<h2 id=\"pertaruhan\">Pertaruhan</h2>\n\n<p>Pilih jumlah taruhan. Anda dapat menggunakan tombol <strong>“-”</strong>, <strong>“+”</strong>, <strong>“Min”</strong>, <strong>“Maks”</strong>. Saat jumlah maksimum tercapai, tombol <strong>“+”</strong> dan <strong>“Maks”</strong> dinonaktifkan. Ketika jumlah minimum tercapai, tombol <strong>“-”</strong> dan <strong>“Min”</strong> dinonaktifkan. Pilih Tingkat Risiko: Rendah, Normal, atau Tinggi. Pilih jumlah Baris untuk permainan ini: dari 8 hingga 16. Pilih Mode Taruhan: Manual atau Otomatis.</p>\n\n<p>Tekan tombol <strong>Main</strong> untuk memulai ronde permainan ini. Kecuali <strong>Mode Taruhan</strong>, semua tombol taruhan dinonaktifkan selama ronde berlangsung. Selama ronde berlangsung, tombol <strong>Main</strong> dapat digunakan untuk memulai ronde berikutnya dengan pengaturan yang sama. Di akhir setiap ronde, bola akan masuk ke dalam kantong. Jumlah yang ditampilkan di setiap kantong menunjukkan nilai pengganda. Pengganda di setiap kantong, tempat mendaratnya bola, akan diterapkan terhadap taruhan pemain. Pembayaran akhir dihitung dengan cara mengalikan taruhan pemain dengan semua nilai pengganda yang berlaku.</p>\n\n<p>Dalam <strong>Mode Otomatis</strong>, kolom dengan jumlah taruhan otomatis akan ditampilkan. Pilih <strong>jumlah taruhan</strong>. Tekan tombol <strong>Main</strong>. Tombol <strong>Main</strong> berubah menjadi <strong>Stop</strong> dengan jumlah sisa taruhan. Jika tidak ada cukup dana di saldo, Anda dapat mengakhiri rangkaian putaran dengan mengklik <strong>Stop</strong>, saat ronde yang ditetapkan sudah tercapai.</p>\n\n<p><span class=\"min_max_bet\">Nilai taruhan minimal sebesar {min_bet}. Nilai taruhan maksimal sebesar {max_bet}</span></p>\n\n<h2 id=\"hasil\">Hasil</h2>\n\n<p>Kemenangan dihitung sesuai dengan tabel pembayaran. Hasilnya dimasukkan ke kolom saldo. Jumlah pembayaran bervariasi dari rendah ke tinggi.</p>\n\n<div class=\"license-block-casual casual_custom_license\">\n\n  <h2 id=\"persyaratan-lisensi\">Persyaratan lisensi</h2>\n\n  <p><span class=\"__OPTIONS__-license_rules-license netherlands\">\nMode Otomatis bisa saja tidak tersedia dalam permainan ini karena persyaratan lisensi yang mengatur pekerjaan operator.\n</span></p>\n\n  <p><span class=\"__OPTIONS__-license_rules-license netherlands\">\nPutaran cepat bisa saja tidak tersedia dalam permainan ini karena persyaratan lisensi yang mengatur pekerjaan operator.\n</span></p>\n\n  <p><span class=\"casual_custom_license\"> Kemampuan untuk memulai ronde lainnya dengan pengaturan yang sama menggunakan tombol ‘Main’ selama ronde saat ini berlangsung bisa saja tidak dapat digunakan dalam permainan karena lisensi yang mengatur pekerjaan operator. Dalam hal ini, tombol ‘Main’ tetap tidak aktif hingga ronde saat ini selesai dan hasilnya ditampilkan. Hanya satu ronde yang bisa dimainkan dalam satu waktu.</span></p>\n\n</div>\n\n<h2 id=\"return-to-player\">Return to Player</h2>\n\n<p>Keseluruhan Return to Player (RTP) teoretis sebesar {RTP.min_rtp}% - {RTP.max_rtp}% tergantung pada strategi pilihan pemain.</p>\n\n<p>Jika terjadi malfungsi, semua permainan dan pembayaran akan dibatalkan! Semua ronde yang belum selesai akan diakhiri setiap 24 jam. Jika permainan membutuhkan “Kumpulkan”, “Kumpulkan” akan dilakukan dan kemenangan ronde tersebut akan ditambahkan ke saldo pemain. Jika permainan membutuhkan pemain untuk mengambil tindakan, hasil dihitung dengan asumsi bahwa pemain memilih tindakan tanpa risiko dan tanpa menaikkan taruhan awal.</p>\n\n<p><span class=\"game_version\">Versi Permainan {game_version}.</span></p>\n\n<p>Peraturan Permainan yang dipublikasikan pada situs web ini tersedia dalam Bahasa Inggris. Penerjemahan ke dalam bahasa lain diberikan sebagai layanan dengan itikad baik. Jika terjadi ambiguitas antara versi Bahasa Inggris dan terjemahannya, versi Bahasa Inggris selalu menjadi prioritas.</p>\n</div>\n","contentUpdateScript":"const casinoOptions = window.__OPTIONS__;\nlet customRulesStyle = '';\n\nif (casinoOptions?.math?.gamble_limit) {\n    content = content.replaceAll('{GAMBLE_LIMIT}', casinoOptions.math.gamble_limit);\n}\n\n//INFO: temporary solution for BGG-7896 & BGG-11170, but we need more flexible solution\nconst licenseDisabled = [\"empty\", \"switzerland\"];\nconst rulesLicense = casinoOptions?.license_rules?.license ?? \"empty\";\nif (licenseDisabled.includes(rulesLicense)) {\n    customRulesStyle += ` .license-block { display: none } `;\n}\n\nif (rulesLicense === \"empty\") {\n\tcustomRulesStyle += ` .license-block-casual { display: none } `;\n}\n\n// BGG-11165: Allow custom rules for any license\ncustomRulesStyle += ` .__OPTIONS__-license_rules-license { display: none } `;\ncustomRulesStyle += ` .__OPTIONS__-license_rules-license.${rulesLicense} { display: unset } `;\n\nif (casinoOptions?.ui?.show_rtp_in_rules === false) {\n    const rtpRegExp = /<h\\d[^>]*>[^>]*<\\/h\\d>[^<]*<p>[^<]*(\\{RTP.+\\}|\\d[^<]*%)[^<]*<\\/p>[^<]*/;\n\n    content = content.replace(rtpRegExp, '');\n}\n\nif (casinoOptions?.math?.rtp) {\n    if (!isNaN(casinoOptions.math.rtp)) {\n        casinoOptions.math.rtp = { main: casinoOptions.math.rtp };\n    }\n\n    content = content.replaceAll(`{RTP_VALUE}`, `{RTP.main}`);\n    Object.keys(casinoOptions.math.rtp).forEach((key) => {\n        content = content.replaceAll(`{RTP.${key}}`, casinoOptions.math.rtp[key]);\n    });\n}\n\nif (casinoOptions?.custom?.paytableFormatted) {\n    Object.keys(casinoOptions.custom.paytableFormatted).forEach((key) => {\n        content = content.replaceAll(`{PAYTABLE.${key}}`, casinoOptions.custom.paytableFormatted[key]);\n    });\n}\n\nif (casinoOptions?.custom?.wintableFormatted) {\n\tObject.keys(casinoOptions.custom.wintableFormatted).forEach((key) => {\n\t\tcontent = content.replaceAll(`{WIN.${key}}`, casinoOptions.custom.wintableFormatted[key]);\n\t});\n}\n\nif (casinoOptions?.custom?.maxWinsFormatted) {\n    casinoOptions.custom.maxWinsFormatted.forEach((winFormatted, index) => {\n        content = content.replaceAll(`{MAX_WIN.${index}}`, winFormatted);\n    });\n}\n\nif (casinoOptions?.custom?.betFormatted) {\n    content = content.replaceAll(`{BET_FORMATTED}`, casinoOptions.custom.betFormatted);\n}\n\nif (customRulesStyle !== '') {\n    content = '<style>' + customRulesStyle + '</style>' + content;\n}\n\nreturn content;\n\n","domScripts":["(()=>{\nconst casinoOptions = window.__OPTIONS__;\n\nfunction formatBet(bet, subunits, exponent = 0) {\n    const betValue = bet / subunits;\n    let ret;\n\n    if (exponent > 0) {\n        let str = betValue.toFixed(exponent).split('.');\n        if (str[0].length > 3) {\n            str[0] = str[0].replace(/(.)(?=(.{3})+$)/g, '$1 ');\n        }\n        ret = str.join('.');\n    } else {\n        ret = betValue.toFixed(0).replace(/(.)(?=(.{3})+$)/g, '$1 ');\n    }\n    return ret;\n}\n\nfunction setMinMaxBets(options) {\n    const { rules, license_rules } = options;\n    const { min_bet, max_bet, currency } = rules || {};\n    const { symbol, exponent, subunits } = currency || {};\n\n    const isNeedToRemoveMinMaxBetBlock =\n        license_rules?.license !== 'switzerland' && license_rules?.license !== 'danish' && license_rules?.license !== 'swedish';\n    document.querySelectorAll('.min_max_bet').forEach((fragment) => {\n        if (isNeedToRemoveMinMaxBetBlock || (!min_bet && !max_bet)) {\n            fragment.remove();\n        } else {\n            const currencySymbol = symbol || '';\n            const minBet = formatBet(min_bet, subunits, exponent);\n            const maxBet = formatBet(max_bet, subunits, exponent);\n            fragment.textContent = fragment.textContent.replace('{min_bet}', `${minBet} ${currencySymbol}`);\n            fragment.textContent = fragment.textContent.replace('{max_bet}', `${maxBet} ${currencySymbol}`);\n        }\n    });\n}\n\nsetMinMaxBets(casinoOptions);\n\n})()\n","(()=>{\nconst casinoOptions = window.__OPTIONS__;\nconst customLicenses = ['netherlands', 'swedish', 'italian', 'switzerland'];\n\nfunction handleCustomLicenses(options, customLicenses) {\n\tdocument.querySelectorAll('.casual_custom_license').forEach((fragment) => {\n\t\tif (!customLicenses.includes(options?.license_rules?.license)) {\n\t\t\tfragment.remove();\n\t\t}\n\t});\n}\n\nhandleCustomLicenses(casinoOptions, customLicenses);\n\n})()\n","(()=>{\nconst casinoOptions = window.__OPTIONS__;\n\nfunction handleGameVersion(options) {\n    const gameVersion = options?.version;\n\n    document.querySelectorAll('.game_version').forEach((fragment) => {\n        if (!gameVersion) {\n            fragment.remove();\n        } else {\n            fragment.textContent = fragment.textContent.replaceAll('{game_version}', `${gameVersion}`);\n        }\n    });\n}\n\nhandleGameVersion(casinoOptions);\n\n})()\n","(()=>{\nconst PURCHASE_KEYS_REGEX = /buy|chance/;\nconst NETHERLANDS_RTP_TO_RENDER = /(main|chance)/;\n\nfunction getFinalRtpValues(options, isNeedRemovePurchasesRtp) {\n    const rtp = options?.math?.rtp ?? null;\n\n    if (!rtp || !isNeedRemovePurchasesRtp) return rtp;\n\n    return Object.entries(rtp).reduce((result, [rtpName, rtpValue]) => {\n        if (!PURCHASE_KEYS_REGEX.test(rtpName)) {\n            result[rtpName] = rtpValue;\n        }\n        return result;\n    }, {});\n}\n\nfunction removeBonusRtpFromRules(rtp, isNeedRemovePurchasesRtp) {\n    document.querySelectorAll('[class*=\"rtp\"]').forEach((fragment) => {\n        const rtpName = fragment.className.replace('rtp-', '');\n        const isNeedRemoveStaticRtp = isNeedRemovePurchasesRtp && PURCHASE_KEYS_REGEX.test(rtpName);\n        const isNeedRemoveDynamicRtp = rtp && !rtp[rtpName];\n\n        if (isNeedRemoveDynamicRtp || isNeedRemoveStaticRtp) {\n            fragment.parentElement.removeChild(fragment);\n        }\n    });\n}\n\nfunction removeAllBonusRtpExeptChance(rtp, isNeedRemoveRtp) {\n    document.querySelectorAll('[class*=\"rtp\"]').forEach((fragment) => {\n        const rtpName = fragment.className.replace('rtp-', '');\n        const isNeedRemoveStaticRtp = isNeedRemoveRtp && !NETHERLANDS_RTP_TO_RENDER.test(rtpName);\n        const isNeedRemoveDynamicRtp = rtp && !rtp[rtpName];\n\n        if (isNeedRemoveDynamicRtp || isNeedRemoveStaticRtp) {\n            fragment.parentElement.removeChild(fragment);\n        }\n    });\n}\n\nfunction replaceContent() {\n    const casinoOptions = window.__OPTIONS__;\n\n    const rulesLicense = casinoOptions?.license_rules?.license ?? 'empty';\n    const isNeedRemovePurchasesRtp = rulesLicense === 'greek';\n    const isNeedRemovePurchasesRtpForNetherlands = rulesLicense === 'netherlands';\n    const isNeedRemovePurchasesRtpForPortuguese = rulesLicense === 'portuguese';\n    const isNeedRemoveRtp = isNeedRemovePurchasesRtpForNetherlands || isNeedRemovePurchasesRtpForPortuguese;\n\n    const rtp = getFinalRtpValues(casinoOptions, isNeedRemovePurchasesRtp);\n    removeBonusRtpFromRules(rtp, isNeedRemovePurchasesRtp);\n    removeAllBonusRtpExeptChance(rtp, isNeedRemoveRtp);\n}\n\nreplaceContent();\n\n})()\n"]}