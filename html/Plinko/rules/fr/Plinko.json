{"content":"<div id=\"rules\">\n<h1 id=\"rgles-du-plinko\">Règles du Plinko</h1>\n\n<h2 id=\"introduction\">Introduction</h2>\n\n<p>Plinko est un jeu de hasard singulier joué avec une balle « tombant » sur la planche verticale remplie de lignes décalées de piquets, jeu très populaire vu sur les émissions de télévision au XXe siècle.  BGaming a représenté le plateau sous la forme d’une pyramide. Le jeu est simple tel qu’il est : le joueur choisit entre 8 et 16 lignes, en espérant que la balle tomberait dans l’un des trous choisis avec le meilleur paiement, et surveille simplement le « processus de rebondissement à travers les obstacles » depuis le haut de la pyramide jusqu’en en bas de la planche. La balle finit finalement au piquet du bas et détermine le prix. Alors bienvenue dans le système complexe de Plinko, faites confiance à votre chance et laissez la balle tomber !</p>\n\n<h2 id=\"rgles\">Règles</h2>\n\n<p>Le but est de gagner de l’argent en lâchant la boule de Plinko et en attendant qu’elle atterrisse dans la fente la plus élevée d’argent en bas du plateau.</p>\n\n<h2 id=\"parier\">Parier</h2>\n\n<p>Choisissez le montant de la mise. Les boutons <strong>“-”</strong>, <strong>“+”</strong>, <strong>“Min”</strong>, <strong>“Max”</strong> peuvent être utilisés. Lorsque le montant maximum est atteint, les boutons <strong>« + »</strong> et <strong>« Max »</strong> deviennent désactivés. Lorsque le montant minimum est atteint, les boutons <strong>“-”</strong> et <strong>“Min”</strong> deviennent désactivés. Choisissez le niveau de risque : faible, normale ou élevé. Choisissez le nombre de lignes dans le jeu : de 8 à 16. Choisissez le mode de Mise : Manuel ou Auto.</p>\n\n<p>Pour démarrer la manche appuyez sur le bouton <strong>Jouer</strong>. Tous les boutons de pari deviennent inactifs au moment de la manche sauf pour le <strong>Mode Pari</strong>. Pendant la manche, une autre manche avec les mêmes paramètres en utilisant le bouton <strong>Jouer</strong> peut être démarrée. À la fin de chaque tour, la balle atteint la case. Les chiffres affichés dans chaque case représentent des valeurs multiplicatrices. Le multiplicateur de la case où la balle a atterri est appliqué à la mise du joueur. Le gain final est calculé en multipliant la mise du joueur par tous les multiplicateurs applicables.</p>\n\n<p>En <strong>Mode Automatique</strong>, le champ avec le nombre de mises automatiques est affiché. Choisissez le <strong>nombre de paris</strong>. Appuyez sur le bouton <strong>Jouer</strong>. Le bouton <strong>Jouer</strong> passe à <strong>Stop</strong> avec le nombre de paris qui restent. Vous pouvez mettre fin à une série de manches si le nombre paramétré est atteint, en cliquant sur le bouton <strong>Stop</strong>, s’il n’y a pas assez de fonds sur le solde.</p>\n\n<p><span class=\"min_max_bet\">La valeur de mise minimale est de {min_bet}. La valeur de mise maximale est de {max_bet}</span></p>\n\n<h2 id=\"rsultats\">Résultats</h2>\n\n<p>Le calcul du gain se fait selon la table de paiement. Le résultat est ajouté au solde du compte. Le montant des paiements varie de faible à élevé.</p>\n\n<div class=\"license-block-casual casual_custom_license\">\n\n  <h2 id=\"exigences-en-matire-de-licence\">Exigences en matière de licence</h2>\n\n  <p><span class=\"__OPTIONS__-license_rules-license netherlands\">\nLe mode automatique peut être indisponible dans le jeu en raison des exigences de la licence qui régit le travail de l’opérateur.\n</span></p>\n\n  <p><span class=\"__OPTIONS__-license_rules-license netherlands\">\nLes tours rapides peuvent ne pas être disponibles dans le jeu en raison des exigences de la licence qui régit le travail de l’opérateur.\n</span></p>\n\n  <p><span class=\"casual_custom_license\">La possibilité de commencer un autre tour avec les mêmes paramètres en utilisant le bouton « Jouer » pendant le tour en cours peut ne pas être disponible dans le jeu en raison de la licence qui régit le travail de l’opérateur. Dans ce cas, le bouton « Jouer » reste inactif jusqu’à ce que le tour en cours soit terminé et que les résultats soient affichés. Un seul tour peut être joué à la fois.</span></p>\n\n</div>\n\n<h2 id=\"retour-au-joueur\">Retour au joueur</h2>\n\n<p>Le retour théorique global au joueur (RTP) va de {RTP.min_rtp}% à {RTP.max_rtp}% selon la stratégie choisie par le joueur.</p>\n\n<p>Un dysfonctionnement annule tous les jeux et tous les paiements ! Toutes les manches non achevées seront clôturées toutes les 24 heures. Si le jeu exige une “Collecte” - la “Collecte” aura lieu et le gain de la manche sera ajouté au solde du joueur. Si le jeu exige une action de la part d’un joueur, le résultat est comptabilisé en supposant que le joueur a choisi l’action sans risque sans augmenter la mise initiale.</p>\n\n<p><span class=\"game_version\">Version du jeu {game_version}.</span></p>\n\n<p>Les Règles du Jeu telles qu'elles sont publiées sur ce site Web sont en anglais. Les traductions dans d'autres langues sont fournies en tant que service de bonne foi. En cas d'ambiguïté entre une version anglaise et une traduction, la version anglaise reste toujours la priorité.</p>\n</div>\n","contentUpdateScript":"const casinoOptions = window.__OPTIONS__;\nlet customRulesStyle = '';\n\nif (casinoOptions?.math?.gamble_limit) {\n    content = content.replaceAll('{GAMBLE_LIMIT}', casinoOptions.math.gamble_limit);\n}\n\n//INFO: temporary solution for BGG-7896 & BGG-11170, but we need more flexible solution\nconst licenseDisabled = [\"empty\", \"switzerland\"];\nconst rulesLicense = casinoOptions?.license_rules?.license ?? \"empty\";\nif (licenseDisabled.includes(rulesLicense)) {\n    customRulesStyle += ` .license-block { display: none } `;\n}\n\nif (rulesLicense === \"empty\") {\n\tcustomRulesStyle += ` .license-block-casual { display: none } `;\n}\n\n// BGG-11165: Allow custom rules for any license\ncustomRulesStyle += ` .__OPTIONS__-license_rules-license { display: none } `;\ncustomRulesStyle += ` .__OPTIONS__-license_rules-license.${rulesLicense} { display: unset } `;\n\nif (casinoOptions?.ui?.show_rtp_in_rules === false) {\n    const rtpRegExp = /<h\\d[^>]*>[^>]*<\\/h\\d>[^<]*<p>[^<]*(\\{RTP.+\\}|\\d[^<]*%)[^<]*<\\/p>[^<]*/;\n\n    content = content.replace(rtpRegExp, '');\n}\n\nif (casinoOptions?.math?.rtp) {\n    if (!isNaN(casinoOptions.math.rtp)) {\n        casinoOptions.math.rtp = { main: casinoOptions.math.rtp };\n    }\n\n    content = content.replaceAll(`{RTP_VALUE}`, `{RTP.main}`);\n    Object.keys(casinoOptions.math.rtp).forEach((key) => {\n        content = content.replaceAll(`{RTP.${key}}`, casinoOptions.math.rtp[key]);\n    });\n}\n\nif (casinoOptions?.custom?.paytableFormatted) {\n    Object.keys(casinoOptions.custom.paytableFormatted).forEach((key) => {\n        content = content.replaceAll(`{PAYTABLE.${key}}`, casinoOptions.custom.paytableFormatted[key]);\n    });\n}\n\nif (casinoOptions?.custom?.wintableFormatted) {\n\tObject.keys(casinoOptions.custom.wintableFormatted).forEach((key) => {\n\t\tcontent = content.replaceAll(`{WIN.${key}}`, casinoOptions.custom.wintableFormatted[key]);\n\t});\n}\n\nif (casinoOptions?.custom?.maxWinsFormatted) {\n    casinoOptions.custom.maxWinsFormatted.forEach((winFormatted, index) => {\n        content = content.replaceAll(`{MAX_WIN.${index}}`, winFormatted);\n    });\n}\n\nif (casinoOptions?.custom?.betFormatted) {\n    content = content.replaceAll(`{BET_FORMATTED}`, casinoOptions.custom.betFormatted);\n}\n\nif (customRulesStyle !== '') {\n    content = '<style>' + customRulesStyle + '</style>' + content;\n}\n\nreturn content;\n\n","domScripts":["(()=>{\nconst casinoOptions = window.__OPTIONS__;\n\nfunction formatBet(bet, subunits, exponent = 0) {\n    const betValue = bet / subunits;\n    let ret;\n\n    if (exponent > 0) {\n        let str = betValue.toFixed(exponent).split('.');\n        if (str[0].length > 3) {\n            str[0] = str[0].replace(/(.)(?=(.{3})+$)/g, '$1 ');\n        }\n        ret = str.join('.');\n    } else {\n        ret = betValue.toFixed(0).replace(/(.)(?=(.{3})+$)/g, '$1 ');\n    }\n    return ret;\n}\n\nfunction setMinMaxBets(options) {\n    const { rules, license_rules } = options;\n    const { min_bet, max_bet, currency } = rules || {};\n    const { symbol, exponent, subunits } = currency || {};\n\n    const isNeedToRemoveMinMaxBetBlock =\n        license_rules?.license !== 'switzerland' && license_rules?.license !== 'danish' && license_rules?.license !== 'swedish';\n    document.querySelectorAll('.min_max_bet').forEach((fragment) => {\n        if (isNeedToRemoveMinMaxBetBlock || (!min_bet && !max_bet)) {\n            fragment.remove();\n        } else {\n            const currencySymbol = symbol || '';\n            const minBet = formatBet(min_bet, subunits, exponent);\n            const maxBet = formatBet(max_bet, subunits, exponent);\n            fragment.textContent = fragment.textContent.replace('{min_bet}', `${minBet} ${currencySymbol}`);\n            fragment.textContent = fragment.textContent.replace('{max_bet}', `${maxBet} ${currencySymbol}`);\n        }\n    });\n}\n\nsetMinMaxBets(casinoOptions);\n\n})()\n","(()=>{\nconst casinoOptions = window.__OPTIONS__;\nconst customLicenses = ['netherlands', 'swedish', 'italian', 'switzerland'];\n\nfunction handleCustomLicenses(options, customLicenses) {\n\tdocument.querySelectorAll('.casual_custom_license').forEach((fragment) => {\n\t\tif (!customLicenses.includes(options?.license_rules?.license)) {\n\t\t\tfragment.remove();\n\t\t}\n\t});\n}\n\nhandleCustomLicenses(casinoOptions, customLicenses);\n\n})()\n","(()=>{\nconst casinoOptions = window.__OPTIONS__;\n\nfunction handleGameVersion(options) {\n    const gameVersion = options?.version;\n\n    document.querySelectorAll('.game_version').forEach((fragment) => {\n        if (!gameVersion) {\n            fragment.remove();\n        } else {\n            fragment.textContent = fragment.textContent.replaceAll('{game_version}', `${gameVersion}`);\n        }\n    });\n}\n\nhandleGameVersion(casinoOptions);\n\n})()\n","(()=>{\nconst PURCHASE_KEYS_REGEX = /buy|chance/;\nconst NETHERLANDS_RTP_TO_RENDER = /(main|chance)/;\n\nfunction getFinalRtpValues(options, isNeedRemovePurchasesRtp) {\n    const rtp = options?.math?.rtp ?? null;\n\n    if (!rtp || !isNeedRemovePurchasesRtp) return rtp;\n\n    return Object.entries(rtp).reduce((result, [rtpName, rtpValue]) => {\n        if (!PURCHASE_KEYS_REGEX.test(rtpName)) {\n            result[rtpName] = rtpValue;\n        }\n        return result;\n    }, {});\n}\n\nfunction removeBonusRtpFromRules(rtp, isNeedRemovePurchasesRtp) {\n    document.querySelectorAll('[class*=\"rtp\"]').forEach((fragment) => {\n        const rtpName = fragment.className.replace('rtp-', '');\n        const isNeedRemoveStaticRtp = isNeedRemovePurchasesRtp && PURCHASE_KEYS_REGEX.test(rtpName);\n        const isNeedRemoveDynamicRtp = rtp && !rtp[rtpName];\n\n        if (isNeedRemoveDynamicRtp || isNeedRemoveStaticRtp) {\n            fragment.parentElement.removeChild(fragment);\n        }\n    });\n}\n\nfunction removeAllBonusRtpExeptChance(rtp, isNeedRemoveRtp) {\n    document.querySelectorAll('[class*=\"rtp\"]').forEach((fragment) => {\n        const rtpName = fragment.className.replace('rtp-', '');\n        const isNeedRemoveStaticRtp = isNeedRemoveRtp && !NETHERLANDS_RTP_TO_RENDER.test(rtpName);\n        const isNeedRemoveDynamicRtp = rtp && !rtp[rtpName];\n\n        if (isNeedRemoveDynamicRtp || isNeedRemoveStaticRtp) {\n            fragment.parentElement.removeChild(fragment);\n        }\n    });\n}\n\nfunction replaceContent() {\n    const casinoOptions = window.__OPTIONS__;\n\n    const rulesLicense = casinoOptions?.license_rules?.license ?? 'empty';\n    const isNeedRemovePurchasesRtp = rulesLicense === 'greek';\n    const isNeedRemovePurchasesRtpForNetherlands = rulesLicense === 'netherlands';\n    const isNeedRemovePurchasesRtpForPortuguese = rulesLicense === 'portuguese';\n    const isNeedRemoveRtp = isNeedRemovePurchasesRtpForNetherlands || isNeedRemovePurchasesRtpForPortuguese;\n\n    const rtp = getFinalRtpValues(casinoOptions, isNeedRemovePurchasesRtp);\n    removeBonusRtpFromRules(rtp, isNeedRemovePurchasesRtp);\n    removeAllBonusRtpExeptChance(rtp, isNeedRemoveRtp);\n}\n\nreplaceContent();\n\n})()\n"]}